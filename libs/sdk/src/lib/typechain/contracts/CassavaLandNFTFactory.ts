/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export interface CassavaLandNFTFactoryInterface extends utils.Interface {
  functions: {
    "createERC1155Collection(string,string,string)": FunctionFragment;
    "createERC721Collection(string,string,string)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "createERC1155Collection" | "createERC721Collection"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "createERC1155Collection",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "createERC721Collection",
    values: [string, string, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "createERC1155Collection",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createERC721Collection",
    data: BytesLike
  ): Result;

  events: {
    "ERC1155CassavaCreated(address,address,string,string)": EventFragment;
    "ERC721CassavaCreated(address,address,string,string)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ERC1155CassavaCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC721CassavaCreated"): EventFragment;
}

export interface ERC1155CassavaCreatedEventObject {
  collectionAddress: string;
  creator: string;
  name: string;
  symbol: string;
}
export type ERC1155CassavaCreatedEvent = TypedEvent<
  [string, string, string, string],
  ERC1155CassavaCreatedEventObject
>;

export type ERC1155CassavaCreatedEventFilter =
  TypedEventFilter<ERC1155CassavaCreatedEvent>;

export interface ERC721CassavaCreatedEventObject {
  collectionAddress: string;
  creator: string;
  name: string;
  symbol: string;
}
export type ERC721CassavaCreatedEvent = TypedEvent<
  [string, string, string, string],
  ERC721CassavaCreatedEventObject
>;

export type ERC721CassavaCreatedEventFilter =
  TypedEventFilter<ERC721CassavaCreatedEvent>;

export interface CassavaLandNFTFactory extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: CassavaLandNFTFactoryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    createERC1155Collection(
      name: string,
      symbol: string,
      baseURI: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createERC721Collection(
      name: string,
      symbol: string,
      baseURI: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  createERC1155Collection(
    name: string,
    symbol: string,
    baseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createERC721Collection(
    name: string,
    symbol: string,
    baseURI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    createERC1155Collection(
      name: string,
      symbol: string,
      baseURI: string,
      overrides?: CallOverrides
    ): Promise<string>;

    createERC721Collection(
      name: string,
      symbol: string,
      baseURI: string,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {
    "ERC1155CassavaCreated(address,address,string,string)"(
      collectionAddress?: string | null,
      creator?: string | null,
      name?: null,
      symbol?: null
    ): ERC1155CassavaCreatedEventFilter;
    ERC1155CassavaCreated(
      collectionAddress?: string | null,
      creator?: string | null,
      name?: null,
      symbol?: null
    ): ERC1155CassavaCreatedEventFilter;

    "ERC721CassavaCreated(address,address,string,string)"(
      collectionAddress?: string | null,
      creator?: string | null,
      name?: null,
      symbol?: null
    ): ERC721CassavaCreatedEventFilter;
    ERC721CassavaCreated(
      collectionAddress?: string | null,
      creator?: string | null,
      name?: null,
      symbol?: null
    ): ERC721CassavaCreatedEventFilter;
  };

  estimateGas: {
    createERC1155Collection(
      name: string,
      symbol: string,
      baseURI: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createERC721Collection(
      name: string,
      symbol: string,
      baseURI: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createERC1155Collection(
      name: string,
      symbol: string,
      baseURI: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createERC721Collection(
      name: string,
      symbol: string,
      baseURI: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
