/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AssetClass,
  AssetClassInterface,
} from "../../../contracts/libraries/AssetClass";

const _abi = [
  {
    inputs: [],
    name: "ERC1155",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC20",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC721",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TFUEL",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61016261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80632d2554711461005b5780638425abff146100b7578063cc4aa204146100de578063dd20773414610105575b600080fd5b6100827f973bb64086f173ec8099b7ed3d43da984f4a332e4417a08bc6a286e6402b058681565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b6100827f73ad2146b3d3a286642c794379d750360a2d53a3459a11b3e5d6cc900f55f44a81565b6100827f8ae85d849167ff996c04040c44924fd364217285e4cad818292c7ac37c0a345b81565b6100827f318f511c76b607eca2b16896b72d0dbd3fce749fcc8f07d9cfe1712b905f3a168156fea26469706673582212204383614bf81a0b117981971c4980f9ab3fe46c28867812b1392345376643ee2864736f6c634300080d0033";

type AssetClassConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetClassConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetClass__factory extends ContractFactory {
  constructor(...args: AssetClassConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AssetClass> {
    return super.deploy(overrides || {}) as Promise<AssetClass>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AssetClass {
    return super.attach(address) as AssetClass;
  }
  override connect(signer: Signer): AssetClass__factory {
    return super.connect(signer) as AssetClass__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetClassInterface {
    return new utils.Interface(_abi) as AssetClassInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetClass {
    return new Contract(address, _abi, signerOrProvider) as AssetClass;
  }
}
