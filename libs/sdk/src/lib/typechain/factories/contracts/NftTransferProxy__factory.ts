/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NftTransferProxy,
  NftTransferProxyInterface,
} from "../../contracts/NftTransferProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "rolesManager_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IERC1155",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "erc1155safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "erc721safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rolesManager",
    outputs: [
      {
        internalType: "contract IRoles",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105e53803806105e583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610552806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80639c1c2ee914610046578063a3574c5b1461005b578063f709b9061461008a575b600080fd5b610059610054366004610389565b61009d565b005b60005461006e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b610059610098366004610447565b61020a565b6000546040516336b87bd760e11b81523360048201526001600160a01b0390911690636d70f7ae90602401602060405180830381865afa1580156100e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101099190610498565b6101805760405162461bcd60e51b815260206004820152603860248201527f4e66745472616e7366657250726f78793a2043616c6c657220646f6573206e6f60448201527f74206861766520746865204f70657261746f7220726f6c65000000000000000060648201526084015b60405180910390fd5b6040517ff242432a0000000000000000000000000000000000000000000000000000000081526001600160a01b0388169063f242432a906101cf908990899089908990899089906004016104c1565b600060405180830381600087803b1580156101e957600080fd5b505af11580156101fd573d6000803e3d6000fd5b5050505050505050505050565b6000546040516336b87bd760e11b81523360048201526001600160a01b0390911690636d70f7ae90602401602060405180830381865afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102769190610498565b6102e85760405162461bcd60e51b815260206004820152603860248201527f4e66745472616e7366657250726f78793a2043616c6c657220646f6573206e6f60448201527f74206861766520746865204f70657261746f7220726f6c6500000000000000006064820152608401610177565b6040517f42842e0e0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301528381166024830152604482018390528516906342842e0e90606401600060405180830381600087803b15801561035357600080fd5b505af1158015610367573d6000803e3d6000fd5b5050505050505050565b6001600160a01b038116811461038657600080fd5b50565b600080600080600080600060c0888a0312156103a457600080fd5b87356103af81610371565b965060208801356103bf81610371565b955060408801356103cf81610371565b9450606088013593506080880135925060a088013567ffffffffffffffff808211156103fa57600080fd5b818a0191508a601f83011261040e57600080fd5b81358181111561041d57600080fd5b8b602082850101111561042f57600080fd5b60208301945080935050505092959891949750929550565b6000806000806080858703121561045d57600080fd5b843561046881610371565b9350602085013561047881610371565b9250604085013561048881610371565b9396929550929360600135925050565b6000602082840312156104aa57600080fd5b815180151581146104ba57600080fd5b9392505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a060808301528260a0830152828460c0840137600060c0848401015260c0601f19601f850116830101905097965050505050505056fea26469706673582212201dda13a2188e07d189f6403eefc9f9878ac514aca6fd149716ade831dce6b0ca64736f6c634300080d0033";

type NftTransferProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NftTransferProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NftTransferProxy__factory extends ContractFactory {
  constructor(...args: NftTransferProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    rolesManager_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NftTransferProxy> {
    return super.deploy(
      rolesManager_,
      overrides || {}
    ) as Promise<NftTransferProxy>;
  }
  override getDeployTransaction(
    rolesManager_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(rolesManager_, overrides || {});
  }
  override attach(address: string): NftTransferProxy {
    return super.attach(address) as NftTransferProxy;
  }
  override connect(signer: Signer): NftTransferProxy__factory {
    return super.connect(signer) as NftTransferProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NftTransferProxyInterface {
    return new utils.Interface(_abi) as NftTransferProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NftTransferProxy {
    return new Contract(address, _abi, signerOrProvider) as NftTransferProxy;
  }
}
